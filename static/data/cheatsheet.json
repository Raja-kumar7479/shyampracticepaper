[
    {
        "title": "Reverse a String",
        "description": "Write a function that reverses a given string."
    },
    {
        "title": "Find the Maximum Element in an Array",
        "description": "Write a function that finds the maximum element in a given array of integers."
    },
    {
        "title": "Check if a String is a Palindrome",
        "description": "Write a function that checks if a given string reads the same backward as forward."
    },
    {
        "title": "Find the Missing Number in an Array",
        "description": "Given an array of consecutive integers with one missing element, write a function to find the missing number."
    },
    {
        "title": "Find the Intersection of Two Arrays",
        "description": "Write a function that finds the elements present in both a given pair of arrays."
    },
    {
        "title": "Remove Duplicates from an Array",
        "description": "Write a function that removes duplicate elements from a given array while preserving the order."
    },
    {
        "title": "Count the Occurrence of Each Element in an Array",
        "description": "Write a function that counts the number of times each element appears in a given array."
    },
    {
        "title": "Find the Second Largest Element in an Array",
        "description": "Write a function that finds the second largest element in a given array."
    },
    {
        "title": "Merge Two Sorted Arrays",
        "description": "Write a function that merges two sorted arrays into a single sorted array."
    },
    {
        "title": "Find the Length of the Longest Substring Without Repeating Characters",
        "description": "Write a function that finds the length of the longest substring in a string where all characters are unique."
    },
    {
        "title": "Reverse a Linked List",
        "description": "Write a function that reverses a given linked list."
    },
    {
        "title": "Implement a Stack Using an Array",
        "description": "Write code to implement a stack data structure using an array."
    },
    {
        "title": "Implement a Queue Using an Array",
        "description": "Write code to implement a queue data structure using an array."
    },
    {
        "title": "Find the Lowest Common Ancestor in a Binary Tree",
        "description": "Write a function to find the lowest common ancestor (LCA) of two given nodes in a binary tree."
    },
    {
        "title": "Check if a Binary Tree is a Binary Search Tree (BST)",
        "description": "Write a function that checks if a given binary tree adheres to the properties of a BST."
    },
    {
        "title": "Find the Level Order Traversal of a Binary Tree",
        "description": "Write a function that performs a level-order traversal of a binary tree, returning the elements level by level."
    },
    {
        "title": "Clone a Linked List with Random Pointers",
        "description": "Write a function that creates a deep copy of a linked list where each node also has a random pointer to another node in the list."
    },
    {
        "title": "Find the Kth Largest Element in an Array",
        "description": "Write a function that finds the kth largest element in a given array."
    },
    {
        "title": "Find All Combinations of a Sum",
        "description": "Write a function that finds all unique combinations of numbers in a given array that add up to a specific target sum."
    },
    {
        "title": "Binary Operations on Strings",
        "description": "Write a function that performs binary operations like AND, OR, and XOR on a given string of binary numbers with respective operators."
    },
    {
        "title": "Calculate Binary Operations",
        "description": "Given a string with binary numbers and operators (AND, OR, XOR), write a function to calculate the result by scanning from left to right."
    },
    {
        "title": "Find the Maximum and Its Index in an Array",
        "description": "Write a function to find the greatest number in an array and its index."
    },
    {
        "title": "Operation Choices",
        "description": "Write a function that performs operations (addition, subtraction, multiplication, division) based on a given integer parameter."
    },
    {
        "title": "Food Distribution Among Rats",
        "description": "Adam decides to do some charity work. From day 1 till day x, he will give i^2 coins to charity. On the day ‘i’ (1 <= i <= x), find the number of coins he gives to charity."
    },
    {
        "title": "Max Exponent of 2 in Range",
        "description": "Find and return the number between 'a' and 'b' (inclusive on both ends) which has the maximum exponent of 2."
    },
    {
        "title": "Difference of Sum",
        "description": "Given m and n, find the total of all integers ranging between 1 to n (inclusive) which are not divisible by m. Return the difference between the sum of integers not divisible by m and the sum of integers divisible by m."
    },
    {
        "title": "Find Second Largest Number",
        "description": "Form an array of 1000 integers and find the second-largest number. If there is no second-largest number, return -1."
    },
    {
        "title": "Small Large Sum",
        "description": "Write a function SmallLargeSum(array) that performs the addition of the second largest element from even locations with the second largest element from odd locations. If the length of the array is 3 or less, return 0. If the array is empty, return 0."
    },
    {
        "title": "Password Validation",
        "description": "Write a function CheckPassword(str) which validates the password. The password is valid if it contains at least 4 characters, at least 1 numeric digit, at least 1 capital letter, does not contain space or slash (/), and the starting character is not a number."
    },
    {
        "title": "Find Maximum and Its Index",
        "description": "Write a function FindMaxInArray which finds the greatest number from an array and its index."
    },
    {
        "title": "Operation Choices",
        "description": "Write a function OperationChoices(c, a, b) that returns: (a + b) if c = 1, (a - b) if c = 2, (a * b) if c = 3, (a / b) if c = 4."
    },
    {
        "title": "Sort and Sum Matrices",
        "description": "Divide a given matrix into two sub-matrices (even and odd indexed), sort them in ascending order, and print the sum of the second largest number from both matrices."
    },
    {
        "title": "Reverse String Word-Wise",
        "description": "Write a function to reverse a string word-wise. The last word in the string should become the first word and vice versa."
    },
    {
        "title": "Count Swaps for Selection Sort",
        "description": "Count the number of swaps required to sort a list of integers in ascending order using the selection sort algorithm."
    },
    {
        "title": "Minimum Chocolates Distribution",
        "description": "Return the minimum number of chocolates needed to be distributed to each person so that the difference between the chocolates of any two people is minimized."
    },
    {
        "title": "Parking Slots",
        "description": "Given a character array representing parking slots, where 'S' is an empty slot and 'X' is an occupied slot, find the maximum number of cars that can be parked in consecutive empty slots."
    },
    {
        "title": "String Replacement",
        "description": "Replace all occurrences of a character 'a' with 'b' and vice versa in a given string."
    },
    {
        "title": "Equilibrium Point",
        "description": "Find the index of an equilibrium point in an array where the sum of elements on the left of the index is equal to the sum on the right. Return -1 if no such point exists."
    },
    {
        "title": "Rotate Array",
        "description": "Rotate an array by 'd' positions to the right in place without using additional memory."
    },
    {
        "title": "Substring Search",
        "description": "Find the index of the first occurrence of a substring in a string or return -1 if the substring is not found."
    },
    {
        "title": "Reverse Words in String",
        "description": "Reverse the order of words in a given string."
    },
    {
        "title": "Pair with Sum",
        "description": "Find a pair of numbers in an array where the sum equals a given value."
    },
    {
        "title": "Maximum Subarray Sum",
        "description": "Find the maximum sum of a contiguous subarray in an array."
    },
    {
        "title": "Replace Characters in String",
        "description": "Given a string and two characters, replace all occurrences of the first character with the second and vice versa."
    },
    {
        "title": "Find Minimum Value and Index",
        "description": "Find the minimum value in an array and its index."
    },
    {
        "title": "Average of Positive Numbers",
        "description": "Find the average of all positive numbers in a given array."
    },
    {
        "title": "Count Element Occurrences",
        "description": "Count the number of occurrences of a given element in an array."
    },
    {
        "title": "Check Element Presence",
        "description": "Check if a given element is present in an array."
    }
]
